apply plugin: 'idea'

task wrapper(type: Wrapper) {
   gradleVersion = '1.10'
}

allprojects { project ->

}

subprojects {
   apply plugin: 'idea'
   apply plugin: 'groovy'

   compileJava.sourceCompatibility = 1.8
   compileJava.targetCompatibility = 1.8

   compileGroovy.sourceCompatibility = 1.7
   compileGroovy.targetCompatibility = 1.7

   repositories {
      mavenCentral()
   }

   dependencies {
      compile 'org.codehaus.groovy:groovy-all:2.2.1:indy'

      testCompile 'junit:junit:4.11'
      testCompile('org.spockframework:spock-core:0.7-groovy-2.0') {
         exclude group: 'org.codehaus.groovy', module: 'groovy-all'
      }
//      testCompile 'cglib:cglib-nodep:2.2.2'
   }

   // this enables the use of invokeDynamic in the generated by code from the groovy compiler
   tasks.withType(GroovyCompile) {
      groovyOptions.optimizationOptions.indy = true
   }

   task createDirs() << {
      sourceSets.all {
         it.groovy.srcDirs.each { it.mkdirs() }
         it.resources.srcDirs.each { it.mkdirs() }
      }
   }

   task createModuleDir() << {
      file('.').mkdirs()
   }

   task createBuildFile(dependsOn: [createModuleDir]) << {
      file('build.gradle').withWriter { out ->
         out.println("version = '1.0'")
         out.println()
         out.println("dependencies {")
         out.println("}")
      }
   }

   task createModule(dependsOn: [createBuildFile, createDirs, ideaModule, ideaProject]) << {
      sourceSets.all {
         it.groovy.srcDirs.each { it.mkdirs() }
         it.resources.srcDirs.each { it.mkdirs() }
      }
   }

   idea {
      module {
         sourceDirs += file('src/main/groovy')
         sourceDirs += file('src/main/resources')

         testSourceDirs += file('src/test/groovy')
         testSourceDirs += file('src/test/resources')

         inheritOutputDirs = false
         outputDir = file('build/classes/main')
         testOutputDir = file('build/classes/test')
      }
   }

}
